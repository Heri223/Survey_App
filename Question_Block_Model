import '/components/min_max_step_widget.dart';
import '/components/new_option_widget.dart';
import '/flutter_flow/flutter_flow_drop_down.dart';
import '/flutter_flow/flutter_flow_icon_button.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/form_field_controller.dart';
import 'package:aligned_tooltip/aligned_tooltip.dart';
import 'question_block_widget.dart' show QuestionBlockWidget;
import 'package:easy_debounce/easy_debounce.dart';
import 'package:expandable/expandable.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

class QuestionBlockModel extends FlutterFlowModel<QuestionBlockWidget> {
  ///  State fields for stateful widgets in this component.

  // State field(s) for Expandable widget.
  late ExpandableController expandableController;

  // State field(s) for QuestionText widget.
  FocusNode? questionTextFocusNode;
  TextEditingController? questionTextController;
  String? Function(BuildContext, String?)? questionTextControllerValidator;
  // State field(s) for FieldType widget.
  String? fieldTypeValue;
  FormFieldController<String>? fieldTypeValueController;
  // State field(s) for TextField widget.
  FocusNode? textFieldFocusNode;
  TextEditingController? textController2;
  String? Function(BuildContext, String?)? textController2Validator;
  // Models for NewOption dynamic component.
  late FlutterFlowDynamicModels<NewOptionModel> newOptionModels;
  // Model for MinMaxStep component.
  late MinMaxStepModel minMaxStepModel;
  // State field(s) for SwitchListTile widget.
  bool? switchListTileValue;

  /// Initialization and disposal methods.

  void initState(BuildContext context) {
    newOptionModels = FlutterFlowDynamicModels(() => NewOptionModel());
    minMaxStepModel = createModel(context, () => MinMaxStepModel());
  }

  void dispose() {
    expandableController.dispose();
    questionTextFocusNode?.dispose();
    questionTextController?.dispose();

    textFieldFocusNode?.dispose();
    textController2?.dispose();

    newOptionModels.dispose();
    minMaxStepModel.dispose();
  }

  /// Action blocks are added here.

  /// Additional helper methods are added here.
}
